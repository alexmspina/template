version: "3.7"
services:
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - ./volumes/zoo1/data:/data
      - ./volumes/zoo1/datalog:/datalog

  broker1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: broker1
    ports:
      - target: 19092
        published: 9092
        protocol: tcp
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_LISTENERS: SSL://broker1:19092
      KAFKA_ADVERTISED_LISTENERS: SSL://broker1:19092
      KAFKA_SSL_KEYSTORE_FILENAME: broker1.keystore.jks
      KAFKA_SSL_KEYSTORE_CREDENTIALS: broker1_keystore_creds
      KAFKA_SSL_KEY_CREDENTIALS: broker1_sslkey_creds
      KAFKA_SSL_TRUSTSTORE_FILENAME: broker1.truststore.jks
      KAFKA_SSL_TRUSTSTORE_CREDENTIALS: broker1_truststore_creds
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: " "
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SECURITY_INTER_BROKER_PROTOCOL: SSL
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./volumes/broker1/data:/var/lib/kafka/data
      - ../../test/certs:/etc/kafka/secrets
      - ./volumes/broker1/config:/etc/kafka/
    depends_on:
      - zoo1

  postgres:
    image: postgres:12.1-alpine
    command: -c ssl=on -c ssl_cert_file=/var/lib/postgresql/postgres.cer.pem -c ssl_key_file=/var/lib/postgresql/postgres.key.pem
    environment:
      POSTGRES_USER: pad
      POSTGRES_PASSWORD: padsword
      POSTGRES_DB: paddb
      POSTGRES_HOST: postgres
    ports:
      - target: 5432
        published: 5432
        protocol: tcp
        mode: host
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
      - ../../test/certs/postgres.cer.pem:/var/lib/postgresql/postgres.cer.pem
      - ../../test/certs/postgres.key.pem:/var/lib/postgresql/postgres.key.pem

  godev:
    image: pad/godev
    volumes:
      - ../..:/root/project
      - ../../vendor/modules:/go/pkg/mod/cache
      - ./volumes/godev/.config/fisher:/root/.config/fisher
      - ./volumes/godev/.cache/fisher:/root/.cache/fisher
      - ./volumes/godev/.local/share:/root/.local/share
      - ./volumes/godev/.config/nvim/plugged:/root/.config/nvim/plugged
    stdin_open: true
    tty: true

  certdev:
    image: pad/certdev
    volumes:
      - ../../test/certs:/root/certs
      - ../../build/certdev/scripts:/root/scripts
      - ./volumes/certdev/.config/fisher:/root/.config/fisher
      - ./volumes/certdev/.cache/fisher:/root/.cache/fisher
      - ./volumes/certdev/.local/share:/root/.local/share
      - ./volumes/certdev/.config/nvim/plugged:/root/.config/nvim/plugged
    stdin_open: true
    tty: true
